@model API.Models.Frontend.Course.CourseModel
<h1>Course</h1>
<ul class="list-group">
    <li class="list-group-item">
        <div class="row">
            <div class="col">Name</div>
            <div class="col">@Model.Course.CourseTemplate.Name</div>
        </div>
    </li>
    <li class="list-group-item">
        <div class="row">
            <div class="col">Title</div>
            <div class="col">@Model.Course.CourseTemplate.Title</div>
        </div>
    </li>
    <li class="list-group-item">
        <div class="row">
            <div class="col">Description</div>
            <div class="col">@Model.Course.CourseTemplate.Description</div>
        </div>
    </li>
    <li class="list-group-item">
        <div class="row">
            <div class="col">Material URL</div>
            <div class="col">@Model.Course.CourseTemplate.MaterialUrl</div>
        </div>
    </li>
    @if ((bool)ViewData["loggedIn"])
    {
        <li class="list-group-item">
            <div class="row">
                <div class="col">Refresh course</div>
                <div class="col"><input class="btn btn-primary" type="button" value="Refresh" onclick="refreshCourse()"/></div>
            </div>
        </li>
    }
</ul>

<h2>Exercises</h2>
<ul class="list-group">
    @foreach (var exercise in Model.Exercises)
    {
        <li class="list-group-item">
            <div class="row">
                <div class="col">@exercise.Subject</div>
                <div class="col">@exercise.Name</div>
                <div class="col">v @exercise.Version</div>
                <div class="col">@exercise.Size bytes</div>
            </div>
        </li>
    }
</ul>

<h2>Enrolled students</h2>
<ul class="list-group">
    @foreach (var student in Model.Enrolled)
    {
        <li class="list-group-item">
            @student.Username
        </li>
    }
</ul>


<h2>Submissions</h2>
<ul class="list-group">
    @foreach(var submission in Model.Course.Submissions.OrderByDescending(s => s.SubmissionTime).Take(20))
    {
        var classes = "";
        if (submission.Status == Proglet.Core.Data.SubmissionStatus.Processing)
            classes = "bg-info";
        else if(submission.Status == Proglet.Core.Data.SubmissionStatus.Processed)
        {
            if (submission.TestResults.All(tr => tr.Pass))
                classes = "bg-success";
            else
                classes = "bg-danger";
        }

    <li class="list-group-item @classes">
        <a asp-controller="Submission" asp-action="@submission.SubmissionId" class="text-white">
            <div class="row">
                <div class="col">@submission.SubmissionTime</div>
                <div class="col">@submission.User.Username</div>
                <div class="col">@submission.Status</div>
                <div class="col">@(submission.TestResults.Count == 0 ? "" : (submission.TestResults.All(tr => tr.Pass) ? "Tests Ok" : "Tests have errors"))</div>
            </div>
        </a>

    </li>
    }
</ul>


<script>
    function refreshCourse() {
        $.post("/api/coursetemplates/refresh/@Model.Course.CourseTemplateId", { "jwt": Cookies.get("jwt") }, function (data) {
            console.log(data);
            alert("Refreshing: " + data);
        });
    }




</script>